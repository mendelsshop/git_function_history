searchState.loadedDescShard("function_grep", 0, "crates.io Crates.io msrv\nErrors that we may give back.\nIf there is no language that has this file extension or …\nIf the filter is not valid for this langauge\nIf tree sitter doesn’t like the grammer for given …\nIf tree sitter doesn’t like the query from a given […\nIf there are no result after searching.\nIf there are no result after filtering.\nIf tree sitter fails to parse the file.\nThe result of finding function with a given name. Use …\nUse to more easily make new <code>SupportedLanguage</code>s. First …\nGet the file name of this file.\nFilters out commits not matching the filter [<code>f</code>]. Returns …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTries to find the appropiate language for the given file […\nTries to find the appropiate language for the given file …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the name of the language used to parse this file\nGet the Range of each found function.\nSearch for all function with the name [<code>name</code>], in string […\nSearch for all function with the name [<code>name</code>], in string […\nGet the name of the function that was searched for to make …\nFor adding new language support, and some predefined …\ndescribes what the filter does and how it parses\nthe name of the filter (so users can find the filter)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nwhat languages this filter works on\nThe list of file extensions used for this language.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>tree_sitter::Language</code> for this language\nThe name of this language\nUse this to obtain some defualt languages (what languages …\nGiven an identifier(name) this should produce a string …")
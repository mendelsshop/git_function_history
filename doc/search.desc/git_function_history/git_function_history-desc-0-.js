searchState.loadedDescShard("git_function_history", 0, "When you have a absolute path to a file.\nwhen you want to filter by a any commit author name that …\nwhen you want to filter by a any commit author email that …\nWhen you want to filter by a commit hash.\nWhen you want to filter by a specific date (in rfc2822 …\nWhen you want to filter from one ate to another date (both …\nWhen you want to filter only files in a specific directory\nWhen you want to filter only files in a specific directory\nWhen you have a absolute path to a file.\nDifferent filetypes that can be used to ease the process …\nWhen you have a relative path to a file and or want to …\nThis is filter enum is used when you want to lookup a …\nwhen you want to filter to only have files that are in a …\nused for the <code>get_function_history</code> macro internally (you don…\nWhen you don’t know the path to a file.\nWhen you want to filter by nothing.\nwhen you want to filter by proggramming language filter\nWhen you have a relative path to a file and or want to …\nMacro to filter a the whole git history, a singe commit, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nValid filters are: <code>Filter::CommitId</code>, <code>Filter::Date</code>, …\nmacro to get the history of a function wrapper around the …\nReturns a vec of information such as author, date, email, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncode and function related language Different types that …\nYou can only move back\nYou can move in both directions\nThis holds information like date and commit <code>commit_hash</code> …\nOptions returned when you use <code>get_move_direction</code> It tells …\nYou can only move forward\nThis struct holds the a list of commits and the function …\nYou can’t move in any direction\nreturns a new <code>Commit</code> by filtering the current one by the …\nreturns a new <code>FunctionHistory</code> by filtering the current one …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nreturns a reference to the current commit\ntells you in which directions you can move through the …\nreturns the current file\nreturns the current file (mutable)\nreturns a hashmap containing the commits metadata …\nthis returns some metadata about the current commit …\ntells you in which directions you can move through the …\nreturns the directions in which ways you can move through …\nreturns a mutable reference to the current commit\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis will return a vector of all the commit hashess in the …\nsets the current file to the previous file if possible\nthis will move to the previous commit if possible\nthis will move to the previous file in the current commit …\nsets the current file to the next file if possible\nthis will move to the next commit if possible\nthis will move to the next file in the current commit if …\nCreate a new <code>Commit</code> with the given <code>commit_hash</code>, functions, …")